{"version":3,"sources":["components/Card.js","components/Header.js","App.js","index.js"],"names":["cardStyle","height","width","float","imgContainerStyle","overflow","textAlign","backgroundSize","imgStyle","display","margin","paddingTop","Card","props","react_default","a","createElement","style","onClick","cardClicked","id","alt","name","src","image","tableStyle","fontSize","backgroundColor","color","marginBottom","tdStyle","h4Style","Header","children","message","score","highscore","App","state","cards","newGame","_this","setState","forEach","card","count","find","cardToMatch","i","this","sort","Math","random","_this2","Fragment","components_Header","className","map","components_Card","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"+6CAUMA,EAAY,CAChBC,OAAQ,QACRC,MAAO,QACPC,MAAO,QAGHC,EAAoB,CACxBH,OAAQ,OACRI,SAAU,SACVC,UAAW,SACXC,eAAgB,QAGZC,EAAY,CAChBC,QAAS,QACPC,OAAQ,OACRC,WAAY,OACdT,MAAO,OAGMU,EA5BF,SAAAC,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,MAAOjB,EAAWkB,QAAS,kBAAML,EAAMM,YAAYN,EAAMO,MAC5DN,EAAAC,EAAAC,cAAA,OAAKC,MAAOb,GACVU,EAAAC,EAAAC,cAAA,OAAKC,MAAOT,EAAUa,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,WCYlDC,EAAa,CACjBvB,MAAO,OACPwB,SAAU,OACVC,gBAAiB,UACjBC,MAAO,UACPC,aAAc,OACdpB,QAAS,eAGLqB,EAAU,CACdxB,UAAW,SACXJ,MAAO,SAGH6B,EAAU,CACdH,MAAO,UACPtB,UAAW,UAGE0B,EAlCA,SAAAnB,GAAK,OAClBC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOC,MAAOQ,GACZX,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,MAAOa,GAAUjB,EAAMoB,UAC3BnB,EAAAC,EAAAC,cAAA,MAAIC,MAAOa,GAAUjB,EAAMqB,SAC3BpB,EAAAC,EAAAC,cAAA,MAAIC,MAAOa,GAAX,UAA4BjB,EAAMsB,MAAlC,eAAqDtB,EAAMuB,cAIjEtB,EAAAC,EAAAC,cAAA,MAAIC,MAAOc,GAAX,iGCqDWM,oNA3DbC,MAAQ,CACNC,QACAJ,MAAO,EACPC,UAAW,EACXF,QAAS,6BAGXM,QAAU,WACRC,EAAKC,SAAS,CAAEP,MAAO,IACvBM,EAAKH,MAAMC,MAAMI,QAAQ,SAAAC,GAAUA,EAAKC,MAAQ,OAGlD1B,YAAc,SAAAC,GACZqB,EAAKH,MAAMC,MAAMO,KAAK,SAACC,EAAaC,GAClC,OAAID,EAAY3B,KAAOA,EACE,IAAnBmB,EAAMS,GAAGH,OACXN,EAAMS,GAAGH,MAAQN,EAAMS,GAAGH,MAAQ,EAClCJ,EAAKC,SAAS,CAAEP,MAAOM,EAAKH,MAAMH,MAAQ,EAAGD,QAAS,YAAc,WAC9De,KAAKX,MAAMH,MAAQc,KAAKX,MAAMF,YAChCa,KAAKP,SAAS,CAAEN,UAAWa,KAAKX,MAAMH,QACb,KAArBc,KAAKX,MAAMH,OAAcc,KAAKP,SAAS,CAAER,QAAS,gBAG1DO,EAAKH,MAAMC,MAAMW,KAAK,kBAAMC,KAAKC,SAAW,MACrC,IAEPX,EAAKC,SAAS,CAAER,QAAS,cACzBO,EAAKD,WACE,GAEF,gFAIJ,IAAAa,EAAAJ,KACP,OACEnC,EAAAC,EAAAC,cAACF,EAAAC,EAAMuC,SAAP,KACExC,EAAAC,EAAAC,cAACuC,EAAD,CACEpB,MAAOc,KAAKX,MAAMH,MAClBC,UAAWa,KAAKX,MAAMF,UACtBF,QAASe,KAAKX,MAAMJ,SAHtB,eAOApB,EAAAC,EAAAC,cAAA,OAAKwC,UAAU,aACZP,KAAKX,MAAMC,MAAMkB,IAAI,SAAAb,GAAI,OACxB9B,EAAAC,EAAAC,cAAC0C,EAAD,CACEvC,YAAakC,EAAKlC,YAClBC,GAAIwB,EAAKxB,GACTuC,IAAKf,EAAKxB,GACVI,MAAOoB,EAAKpB,mBAnDRoC,cCDlBC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.558f9fdd.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = props => (\n  <div style={cardStyle} onClick={() => props.cardClicked(props.id)}>\n    <div style={imgContainerStyle}>\n      <img style={imgStyle} alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nconst cardStyle = {\n  height: \"275px\",\n  width: \"275px\",\n  float: \"left\"\n}\n\nconst imgContainerStyle = {\n  height: \"100%\",\n  overflow: \"hidden\",\n  textAlign: \"center\",\n  backgroundSize: \"100%\"\n}\n\nconst imgStyle  = {\n  display: \"block\",\n    margin: \"auto\",\n    paddingTop: \"30px\",\n  width: \"75%\"\n}\n\nexport default Card;","import React from \"react\";\n\nconst Header = props => (\n  <div>\n    <table style={tableStyle}>\n      <tbody>\n        <tr>\n          <td style={tdStyle}>{props.children}</td>\n          <td style={tdStyle}>{props.message}</td>\n          <td style={tdStyle}>Score: {props.score} Highscore: {props.highscore}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 style={h4Style}>Clicky Game! Click on an image to earn points, but don't click the same image twice!</h4>\n  </div>\n);\n\nconst tableStyle = {\n  width: \"100%\",\n  fontSize: \"2rem\",\n  backgroundColor: '#000000',\n  color: '#CCCCCC',\n  marginBottom: '10px',\n  display: 'inlineBlock'\n}\n\nconst tdStyle = {\n  textAlign: 'center',\n  width: '33.3%'\n}\n\nconst h4Style = {\n  color: \"#CCCCCC\",\n  textAlign: 'center'\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Header from \"./components/Header\";\nimport cards from \"./cards.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    cards,\n    score: 0,\n    highscore: 0,\n    message: 'Click an Image to Begin'\n  };\n\n  newGame = () => {\n    this.setState({ score: 0 });\n    this.state.cards.forEach(card => { card.count = 0; })\n  }\n\n  cardClicked = id => {\n    this.state.cards.find((cardToMatch, i) => {\n      if (cardToMatch.id === id) {\n        if (cards[i].count === 0) {\n          cards[i].count = cards[i].count + 1;\n          this.setState({ score: this.state.score + 1, message: \"Correct!\" }, function () {\n            if (this.state.score > this.state.highscore) {\n              this.setState({ highscore: this.state.score });\n              if (this.state.score === 12) this.setState({ message: \"You Win!\" });\n            };\n          });\n          this.state.cards.sort(() => Math.random() - .5)\n          return true;\n        } else {\n          this.setState({ message: \"You Lose!\" });\n          this.newGame();\n          return false;\n        }\n      } return null;\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header\n          score={this.state.score}\n          highscore={this.state.highscore}\n          message={this.state.message}\n        >\n          Clicky Game\n        </Header>\n        <div className=\"container\">\n          {this.state.cards.map(card => (\n            <Card\n              cardClicked={this.cardClicked}\n              id={card.id}\n              key={card.id}\n              image={card.image}\n            />\n          ))}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}